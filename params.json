{
  "name": "openvpn-monitor",
  "tagline": "openvpn-monitor is a web based OpenVPN monitor, that shows current connection information, such as users, location and data transferred.",
  "body": "# OpenVPN-Monitor\r\n\r\n\r\n## Summary\r\n\r\nOpenVPN-Monitor is a simple python program to generate html that displays the\r\nstatus of an OpenVPN server, including all current connections. It uses the\r\nOpenVPN management console. It typically runs on the same host as the OpenVPN\r\nserver, however it does not necessarily need to.\r\n\r\n[![](https://raw.githubusercontent.com/furlongm/openvpn-monitor/gh-pages/screenshots/openvpn-monitor.png)](https://raw.githubusercontent.com/furlongm/openvpn-monitor/gh-pages/screenshots/openvpn-monitor.png)\r\n\r\n\r\n## Source\r\n\r\nThe current source code is available on github:\r\n\r\nhttps://github.com/furlongm/openvpn-monitor\r\n\r\n\r\n## Quick Install on Debian 8 using apache\r\n\r\n### Install dependencies\r\n\r\n```shell\r\napt-get install python-geoip python-ipaddr python-humanize apache2 git\r\n```\r\n\r\n### Checkout OpenVPN-Monitor\r\n\r\n```shell\r\ncd /var/www/html\r\ngit clone https://github.com/furlongm/openvpn-monitor.git\r\n```\r\n\r\n### Configure OpenVPN\r\n\r\nAdd the following line to your OpenVPN server configuration to run the\r\nmanagement console on 127.0.0.1 port 5555:\r\n\r\n\r\n```\r\n   management 127.0.0.1 5555\r\n```\r\n\r\nRefer to the OpenVPN documentation for further information on how to secure\r\naccess to the management interface.\r\n\r\n### Configure Apache\r\n\r\nChoose one of the following two methods to serve under Apache:\r\n\r\n#### Method 1: configure Apache with mod_wsgi\r\n\r\n```shell\r\napt-get install libapache2-mod-wsgi\r\na2enmod wsgi\r\n```\r\n\r\nAdd the following to /etc/apache2/sites-enabled/000-default.conf\r\n\r\n```\r\n    WSGIScriptAlias /openvpn-monitor /var/www/html/openvpn-monitor/openvpn-monitor.py\r\n\r\n    <Directory \"/var/www/html/openvpn-monitor\">\r\n        <Files openvpn-monitor.py>\r\n            Require all granted\r\n        </Files>\r\n    </Directory>\r\n```\r\n\r\n#### Method 2: configure Apache with mod_cgi\r\n\r\n```shell\r\na2enmod cgi\r\n```\r\n\r\nAdd the following to /etc/apache2/sites-enabled/000-default.conf\r\n\r\n```\r\n    <Directory \"/var/www/html/openvpn-monitor\">\r\n        Options +ExecCGI\r\n        AddHandler cgi-script .py\r\n        DirectoryIndex openvpn-monitor.py\r\n    </Directory>\r\n```\r\n\r\nRestart apache:\r\n\r\n```shell\r\n/etc/init.d/apache2 restart\r\n```\r\n\r\n### Download the GeoLite City Database\r\n\r\n```shell\r\ncd /usr/share/GeoIP/\r\nwget http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz\r\ngunzip GeoLiteCity.dat.gz\r\nmv GeoLiteCity.dat GeoIPCity.dat\r\n```\r\n\r\n### Configure OpenVPN-Monitor\r\n\r\nThe example configuration file `/var/www/html/openvpn-monitor/openvpn-monitor.cfg`\r\nshould give some indication of how to set site name, add a logo, etc. You can\r\nalso set a default location (latitude and longitude) for the embedded maps.\r\nIf not set, the default location is Melbourne, Australia.\r\n\r\nEdit `/var/www/html/openvpn-monitor/openvpn-monitor.cfg` to match your site.\r\n\r\nYou should now be able to navigate to `http://myipaddress/openvpn-monitor`\r\n\r\n### Debugging\r\n\r\nOpenVPN-Monitor can be run from the command line in order to test if the html\r\ngenerates correctly:\r\n\r\n```shell\r\ncd /var/www/html/openvpn-monitor\r\npython openvpn-monitor.py\r\n```\r\n\r\n## License\r\n\r\nOpenVPN-Monitor is licensed under the GPLv3, a copy of which can be found in\r\nthe COPYING file.\r\n\r\n\r\n## Acknowledgements\r\n\r\nFlags are created by Matthias Slovig (flags@slovig.de) and are licensed under\r\nCreative Commons License Deed Attribution-ShareAlike 3.0 Unported\r\n(CC BY-SA 3.0). See http://flags.blogpotato.de/ for more details.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}